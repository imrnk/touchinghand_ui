{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/client/add-client/add-client.component.css","webpack:///./src/app/client/add-client/add-client.component.html","webpack:///./src/app/client/add-client/add-client.component.ts","webpack:///./src/app/client/client-detail/client-detail.component.css","webpack:///./src/app/client/client-detail/client-detail.component.html","webpack:///./src/app/client/client-detail/client-detail.component.ts","webpack:///./src/app/client/client.component.css","webpack:///./src/app/client/client.component.html","webpack:///./src/app/client/client.component.ts","webpack:///./src/app/client/mse/mse.component.css","webpack:///./src/app/client/mse/mse.component.html","webpack:///./src/app/client/mse/mse.component.ts","webpack:///./src/app/client/search-client/search-client.component.css","webpack:///./src/app/client/search-client/search-client.component.html","webpack:///./src/app/client/search-client/search-client.component.ts","webpack:///./src/app/client/session/session.component.css","webpack:///./src/app/client/session/session.component.html","webpack:///./src/app/client/session/session.component.ts","webpack:///./src/app/client/treatment-data/treatment-data.component.css","webpack:///./src/app/client/treatment-data/treatment-data.component.html","webpack:///./src/app/client/treatment-data/treatment-data.component.ts","webpack:///./src/app/clients.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/directive/dropdown.directive.ts","webpack:///./src/app/error-page/error-page.component.css","webpack:///./src/app/error-page/error-page.component.html","webpack:///./src/app/error-page/error-page.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/pipes/fuppercase.pipe.ts","webpack:///./src/app/sessions/sessions.component.css","webpack:///./src/app/sessions/sessions.component.html","webpack:///./src/app/sessions/sessions.component.ts","webpack:///./src/app/sessions/upcoming-sessions/upcoming-sessions.component.css","webpack:///./src/app/sessions/upcoming-sessions/upcoming-sessions.component.html","webpack:///./src/app/sessions/upcoming-sessions/upcoming-sessions.component.ts","webpack:///./src/app/side-notifications/side-notifications.component.css","webpack:///./src/app/side-notifications/side-notifications.component.html","webpack:///./src/app/side-notifications/side-notifications.component.ts","webpack:///./src/app/sidebar/sidebar.component.css","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/utility/error.interceptor.ts","webpack:///./src/app/utility/utility.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ClientComponent } from './client/client.component';\nimport { AddClientComponent } from './client/add-client/add-client.component';\nimport { MseComponent } from './client/mse/mse.component';\nimport { ClientDetailComponent } from './client/client-detail/client-detail.component';\nimport { SessionComponent } from './client/session/session.component';\nimport { TreatmentDataComponent } from './client/treatment-data/treatment-data.component';\nimport { SearchClientComponent } from './client/search-client/search-client.component';\nimport { SessionsComponent } from './sessions/sessions.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\n\nconst appRoutes : Routes = [\n    {path : '', redirectTo : '/dashboard', pathMatch: 'full' },\n    {path : 'dashboard', component : DashboardComponent },\n    {path : 'client',  component : ClientComponent, children : [\n        {path : '', redirectTo : 'search', pathMatch: 'full'},\n        {path : 'add', component :  AddClientComponent},\n        {path : 'search', component :  SearchClientComponent},\n        {path : ':id', component : ClientDetailComponent},        \n        {path : ':id/mse', component : MseComponent},\n        {path : ':id/sessions', component : SessionsComponent},\n        {path : ':id/session/:sid', component : SessionComponent},\n        {path : ':id/treatment-data', component : TreatmentDataComponent},\n        {path : 'sessions', component :  SessionsComponent}\n    ]},\n    {path : 'page-not-found', component : PageNotFoundComponent },\n    {path : '**', redirectTo : '/page-not-found' }\n]\n\n@NgModule({\n    imports : [RouterModule.forRoot(appRoutes)],\n    exports : [RouterModule]\n   })\nexport class AppRoutingModule {\n\n}","module.exports = \".container {\\n  margin-top: 30px;\\n}\\n\\ninput.ng-invalid.ng-touched, select.ng-invalid.ng-touched {\\n  border: 1px solid red;\\n}\"","module.exports = \"<app-header></app-header>\\n<app-sidebar></app-sidebar>\\n<div class=\\\"content-wrapper\\\">\\n    <section class=\\\"content\\\">\\n        <router-outlet></router-outlet>\\n    </section>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  \n  genders = ['male', 'female'];\n  signUpForm : FormGroup;\n  forbiddenUserNames = ['Goru', 'Gadha'];\n\n  ngOnInit(): void {\n    this.signUpForm = new FormGroup({\n       'userdata' : new FormGroup({\n          'username' : new FormControl(null, [Validators.required, this.forbiddenNames.bind(this)]),\n          'email' : new FormControl(null, [Validators.required, Validators.email], this.forbiddenEmails),\n          }),        \n        'gender' : new FormControl('male'),\n        'hobbies' : new FormArray([])\n      });  \n\n      this.signUpForm.valueChanges.subscribe(\n        (value) => {\n\n        }\n      )\n\n      this.signUpForm.statusChanges.subscribe(\n        (status) => {\n          \n        }\n      )\n  }\n\n  onSubmit(){\n  }\n\n  onAddHobby(){\n    const control = new FormControl(null, Validators.required);\n    (<FormArray>this.signUpForm.get('hobbies')).push(control);\n  }\n\n  onDeleteHobby(index: number) {\n    (<FormArray>this.signUpForm.get('hobbies')).removeAt(index);\n  }\n\n  forbiddenNames(control : FormControl) : {[s : string]: boolean} {\n    if(this.forbiddenUserNames.indexOf(control.value) > -1) {\n      return {'namesIsForbidden' : true};\n    }\n    return null; //in case of valid value send null, not false!\n  }\n\n  //async validator\n  forbiddenEmails(control : FormControl) : Promise<any> | Observable<any> {\n    const promise = new Promise<any>(\n      (resolve, reject) => {\n        setTimeout(() => {\n          if(control.value === 'test@test.com'){\n            resolve({'forbiddenEmail' : true});\n          } else {\n            resolve(null);\n          }\n        }, 1500);\n      }\n    );\n    return promise;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ClientComponent } from './client/client.component';\nimport { MseComponent } from './client/mse/mse.component';\nimport { TreatmentDataComponent } from './client/treatment-data/treatment-data.component';\nimport { SessionComponent } from './client/session/session.component';\nimport { AddClientComponent } from './client/add-client/add-client.component';\nimport { SearchClientComponent } from './client/search-client/search-client.component';\nimport { SessionsComponent } from './sessions/sessions.component';\nimport { SideNotificationsComponent } from './side-notifications/side-notifications.component';\nimport { UpcomingSessionsComponent } from './sessions/upcoming-sessions/upcoming-sessions.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ClientDetailComponent } from './client/client-detail/client-detail.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ClientsService } from './clients.service';\nimport { DropdownDirective } from './directive/dropdown.directive';\nimport { FuppercasePipe } from './pipes/fuppercase.pipe';\nimport { environment } from '../environments/environment';\nimport { ErrorInterceptorProvider } from './utility/error.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClientComponent,\n    MseComponent,\n    TreatmentDataComponent,\n    SessionComponent,\n    AddClientComponent,\n    SearchClientComponent,\n    SessionsComponent,\n    SideNotificationsComponent,\n    UpcomingSessionsComponent,\n    HeaderComponent,\n    FooterComponent,\n    DashboardComponent,\n    ClientDetailComponent,\n    PageNotFoundComponent,\n    ErrorPageComponent,\n    SidebarComponent,\n    DropdownDirective,\n    FuppercasePipe    \n  ],\n  imports: [\n    BrowserModule,    \n    HttpClientModule,\n    HttpModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [ClientsService, ErrorInterceptorProvider],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-header\\\">\\n  <h3>Add Client</h3>\\n</div>\\n<section class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <form [formGroup]=\\\"addClientForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">              \\n            <div class=\\\"col-md-4\\\">\\n      \\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"firstName\\\">First Name</label>\\n                  <input type=\\\"text\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\">\\n\\n                  <span *ngIf=\\\"addClientForm.get('firstName').touched && \\n                                        !addClientForm.get('firstName').valid\\\" class=\\\"help-block\\\">\\n                    <span *ngIf=\\\"addClientForm.get('firstName').errors['pattern']\\\">\\n                      Not a valid name.\\n                    </span>\\n                    <span *ngIf=\\\"addClientForm.get('firstName').errors['required']\\\">\\n                      First name is required!\\n                    </span>\\n                  </span>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"gender\\\">Gender</label>\\n                  <select class=\\\"form-control medium-select\\\">\\n                    <option [value]=\\\"gender\\\" *ngFor=\\\"let gender of genders\\\">{{ gender | fuppercase:1 }}</option>\\n                  </select>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"maritalstatus\\\">Marital Status</label>\\n                  <select class=\\\"form-control medium-select\\\">\\n                    <option [value]=\\\"maritalstatus\\\" \\n                    *ngFor=\\\"let maritalstatus of maritalstatuses\\\">{{ maritalstatus | fuppercase:1 }}</option>\\n                  </select>\\n                </div>\\n\\n            </div> <!-- 1st column -->\\n\\n            <div class=\\\"col-md-4\\\">\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"lastName\\\">Last Name</label>\\n                    <input type=\\\"text\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\">\\n  \\n                    <span *ngIf=\\\"addClientForm.get('lastName').touched && \\n                                            !addClientForm.get('lastName').valid\\\" class=\\\"help-block\\\">\\n                      <span *ngIf=\\\"addClientForm.get('lastName').errors['pattern']\\\">\\n                        Not a valid name.\\n                      </span>\\n                      <span *ngIf=\\\"addClientForm.get('lastName').errors['required']\\\">\\n                        Last name is required!\\n                      </span>\\n                    </span>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"age\\\">Age</label>\\n                      <input type=\\\"text\\\" id=\\\"age\\\" formControlName=\\\"age\\\" class=\\\"form-control\\\">\\n    \\n                      <span *ngIf=\\\"addClientForm.get('age').touched && \\n                                        !addClientForm.get('age').valid\\\" class=\\\"help-block\\\">\\n                        <span *ngIf=\\\"addClientForm.get('age').errors['pattern']\\\">\\n                          Not a valid age.\\n                        </span>\\n                        <span *ngIf=\\\"addClientForm.get('age').errors['required']\\\">\\n                          Age is required!\\n                        </span>\\n                      </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"mobile\\\">Mobile Number</label>\\n                        <input type=\\\"text\\\" id=\\\"mobile\\\" formControlName=\\\"mobile\\\" class=\\\"form-control\\\">\\n      \\n                        <span *ngIf=\\\"addClientForm.get('mobile').touched && \\n                                          !addClientForm.get('mobile').valid\\\" class=\\\"help-block\\\">\\n                          <span *ngIf=\\\"addClientForm.get('mobile').errors['pattern']\\\">\\n                            Not a valid mobile number.\\n                          </span>\\n                          <span *ngIf=\\\"addClientForm.get('mobile').errors['required']\\\">\\n                            Mobile number is required!\\n                          </span>\\n                        </span>\\n                      </div>\\n            </div> <!-- second column -->\\n          </div>  <!-- row -->\\n        </div> <!-- card body -->\\n        </div>  <!-- card -->\\n        \\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                  \\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"reference\\\">Reference</label>\\n                        <input type=\\\"text\\\" id=\\\"reference\\\" formControlName=\\\"reference\\\" class=\\\"form-control\\\">\\n      \\n                        <span *ngIf=\\\"addClientForm.get('reference').touched && \\n                                                !addClientForm.get('reference').valid\\\" class=\\\"help-block\\\">\\n                            Please add the name who referred here\\n                        </span>\\n                      </div>\\n    \\n                </div> <!-- 1st column -->\\n                <div class=\\\"col-md-2\\\">\\n                  \\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"status\\\">Session Status</label>\\n                      <select class=\\\"form-control medium-select\\\">\\n                          <option [value]=\\\"status\\\" \\n                          *ngFor=\\\"let status of sessionstatuses\\\">{{ status | fuppercase:1 }}</option>\\n                        </select>\\n                    </div>\\n    \\n                </div> <!-- 2nd column -->\\n                <div class=\\\"col-md-3\\\">\\n                  \\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"followupDate\\\">Follow Up Date</label>\\n                          <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                              <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\n                            </div>\\n                            <input type=\\\"text\\\" id = \\\"datemask\\\" class=\\\"form-control\\\" \\n                            formControlName=\\\"followupDate\\\"                            \\n                            placeholder=\\\"dd/mm/yyyy\\\">\\n                            <span \\n                            *ngIf=\\\"!addClientForm.get('followupDate').valid && \\n                            addClientForm.get('followupDate').touched\\\"\\n                            class=\\\"help-block\\\">\\n                            <span class=\\\"help-block text-danger\\\"\\n                            *ngIf=\\\"addClientForm.get('followupDate').errors['incorrectDate']\\\">\\n                              Invalid date!\\n                            </span>\\n                          </span>\\n                          </div>\\n                    </div>\\n    \\n                </div> <!-- 2nd column -->\\n              </div> <!-- row -->\\n            </div> <!--card body -->\\n          </div> <!-- card -->\\n\\n        <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n              \\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"profession\\\">Profession</label>\\n                    <input type=\\\"text\\\" id=\\\"profession\\\" formControlName=\\\"profession\\\" class=\\\"form-control\\\">\\n  \\n                    <span *ngIf=\\\"addClientForm.get('profession').touched && \\n                                            !addClientForm.get('profession').valid\\\" class=\\\"help-block\\\">\\n                        Not a valid profession!\\n                    </span>\\n                  </div>\\n\\n            </div> <!-- 1st column -->\\n            <div class=\\\"col-md-4\\\">\\n              \\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"education\\\">Education</label>\\n                    <input type=\\\"text\\\" id=\\\"education\\\" formControlName=\\\"education\\\" class=\\\"form-control\\\">\\n  \\n                    <span *ngIf=\\\"addClientForm.get('education').touched && \\n                                            !addClientForm.get('education').valid\\\" class=\\\"help-block\\\">\\n                        Not a valid education!\\n                    </span>\\n                  </div>\\n\\n            </div> <!-- 2nd column -->\\n          </div> <!-- row -->\\n        </div> <!--card body -->\\n      </div> <!-- card -->\\n\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n      \\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"address\\\">Address - First Line</label>\\n                <textarea type=\\\"text\\\" id=\\\"address\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\">\\n                            </textarea>\\n                <span *ngIf=\\\"addClientForm.get('address').touched && \\n                             !addClientForm.get('address').valid\\\" class=\\\"help-block\\\">\\n                  Not a valid address!\\n                </span>\\n              </div>      \\n            </div>\\n            <!-- 1st column -->\\n            <div class=\\\"col-md-4\\\">\\n      \\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"pin\\\">PIN Code</label>\\n                <input type=\\\"text\\\" id=\\\"pin\\\" formControlName=\\\"pin\\\" class=\\\"form-control\\\">\\n      \\n                <span *ngIf=\\\"addClientForm.get('pin').touched && \\n                             !addClientForm.get('pin').valid\\\" class=\\\"help-block\\\">\\n                  Not a valid pincode!\\n                </span>\\n              </div>\\n            </div>\\n            <!-- 2nd column -->\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"city\\\">City</label>\\n                    <input type=\\\"text\\\" id=\\\"city\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\">\\n          \\n                    <span *ngIf=\\\"addClientForm.get('city').touched && \\n                                 !addClientForm.get('city').valid\\\" class=\\\"help-block\\\">\\n                      <span *ngIf=\\\"addClientForm.get('city').errors['pattern']\\\">\\n                        Not a valid city!\\n                      </span>\\n                      <span *ngIf=\\\"addClientForm.get('city').errors['required']\\\">\\n                        City is required!\\n                      </span>\\n                    </span>\\n                  </div>\\n          \\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"state\\\">State</label>\\n                    <input type=\\\"text\\\" id=\\\"state\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\">\\n          \\n                    <span *ngIf=\\\"addClientForm.get('state').touched && \\n                                 !addClientForm.get('state').valid\\\" class=\\\"help-block\\\">\\n                      <span *ngIf=\\\"addClientForm.get('state').errors['pattern']\\\">\\n                        Not a valid state!\\n                      </span>\\n                      <span *ngIf=\\\"addClientForm.get('state').errors['required']\\\">\\n                        State is required!\\n                      </span>\\n                    </span>\\n                  </div> \\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"country\\\">Country</label>\\n                    <input type=\\\"text\\\" id=\\\"country\\\" formControlName=\\\"country\\\" class=\\\"form-control\\\">\\n          \\n                    <span *ngIf=\\\"addClientForm.get('country').touched && \\n                                 !addClientForm.get('country').valid\\\" class=\\\"help-block\\\">\\n                      <span *ngIf=\\\"addClientForm.get('country').errors['pattern']\\\">\\n                        Not a valid Country!\\n                      </span>\\n                      <span *ngIf=\\\"addClientForm.get('country').errors['required']\\\">\\n                        Country is required!\\n                      </span>\\n                    </span>\\n                  </div>\\n          \\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"email\\\">Email</label>\\n                    <input type=\\\"text\\\" id=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\n          \\n                    <span *ngIf=\\\"addClientForm.get('email').touched && \\n                                 !addClientForm.get('email').valid\\\" class=\\\"help-block\\\">\\n                      Not a valid email!\\n                    </span>\\n                  </div> \\n            </div>\\n          </div>\\n          \\n          <!-- row -->\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-block btn-primary\\\" \\n                     type=\\\"submit\\\" [disabled]=\\\"!addClientForm.valid\\\">Submit</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <button class=\\\"btn btn-block btn-warning\\\" \\n                      (click)=\\\"onResetAddClientForm()\\\">Clear</button>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <a routerLink = \\\"/dashboard\\\" class=\\\"btn btn-block btn-danger\\\">Cancel</a>\\n                    </div>\\n                  </div>\\n          </div>\\n        </div>\\n        <!--card body -->\\n      </div>\\n      <!-- card -->\\n      \\n      </form>\\n    </div>\\n  \\n</section>\"","import { Utility } from './../../utility/utility';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css']\n})\nexport class AddClientComponent implements OnInit {\n  model: any;\n  genders = ['male', 'female', 'other'];\n  maritalstatuses = ['married', 'unmarried'];\n  sessionstatuses = ['ongoing', 'closed', 'left'];\n  \n  addClientForm : FormGroup;\n  constructor() { }\n\n  ngOnInit() : void {\n    this.createAddClientForm();\n  }\n\n  createAddClientForm() {\n    this.addClientForm = new FormGroup({\n      'firstName' : new FormControl(null, [Validators.required, Validators.pattern(\"[a-zA-Z ]+\")]),\n      'lastName' : new FormControl(null, [Validators.required, Validators.pattern(\"[a-zA-Z ]+\")]),\n      'gender' : new FormControl('male'),\n      'age' :  new FormControl(null, [Validators.required, Validators.pattern(\"[1-9]{1}[0-9]+\")]),\n      'maritalstatus' : new FormControl('married'),  \n      'mobile' : new FormControl(null, [Validators.required, Validators.pattern(\"[0-9]{10}\")]),\n      'profession' : new FormControl(null, Validators.pattern(\"[a-zA-Z -.]+\")),  \n      'education' : new FormControl(null, Validators.pattern(\"[a-zA-Z -.]+\")),\n      'reference' : new FormControl(null, Validators.pattern(\"[a-zA-Z .]+\")),\n      'status' : new FormControl('ongoing'),\n      'followupDate' : new FormControl(null, Utility.validDate.bind(this)),\n      'address' : new FormControl(null, Validators.pattern(\"[0-9a-zA-Z -/\\\\,.]+\")),\n      'country' : new FormControl(null, [Validators.required, Validators.pattern(\"[a-zA-Z ]+\")]),\n      'city' : new FormControl(null, [Validators.required, Validators.pattern(\"[a-zA-Z ]+\")]),\n      'state' : new FormControl(null, [Validators.required, Validators.pattern(\"[a-zA-Z ]+\")]),\n      'pin' : new FormControl(null,  Validators.pattern(\"[0-9]+\")),\n      'email' : new FormControl(null, Validators.pattern(\"[a-zA-Z0-9._\\-]+@[a-zA-Z0-9.\\-]+[.][a-zA-Z]+\"))\n     });  \n  }\n\n  onResetAddClientForm() {\n    this.createAddClientForm();\n  }\n\n  onSubmit() {\n    console.log(this.addClientForm.value);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-header\\\">\\n  <h3 class=\\\"left-half\\\" *ngIf=\\\"!searchedClient\\\">Client Detail</h3>\\n  <!-- <h5 class=\\\"left-half\\\" *ngIf=\\\"searchedClient\\\">{{ searchedClient.clientName }}</h5> -->\\n</div>\\n<section class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"box box-default\\\">\\n        <div class=\\\"box-header with-border\\\">\\n          <h3 class=\\\"box-title\\\">{{ searchedClient.clientName }}</h3>\\n        </div>\\n        <div class=\\\"box-body\\\">\\n          <table class=\\\"table\\\">\\n            <tbody>\\n              <tr>\\n                <td>Name</td>\\n                <td>{{ searchedClient.clientName }}</td>\\n                <td>Phone</td>\\n                <td>{{ searchedClient.mobile }}</td>\\n              </tr>\\n              <tr>\\n                <td>Email</td>\\n                <td>{{ searchedClient.email }}</td>\\n                <td>Age</td>\\n                <td>{{ searchedClient.age > 0 ? searchedClient.age : '' }}</td>\\n              </tr>\\n              <tr>\\n                <td>Follow Up Date</td>\\n                <td>{{ searchedClient.followupdate }}</td>\\n                <td>Status</td>\\n                <td>{{ searchedClient.status }}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n          <hr>\\n          <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#clientDetailModal\\\">\\n            Tell Me More\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- Modal \\n    <div class=\\\"modal fade\\\" id=\\\"clientDetailModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" \\n    aria-labelledby=\\\"clientDetailModalLabel\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n            <h4 class=\\\"modal-title\\\" id=\\\"clientDetailModalLabel\\\">Client Name</h4>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            ...\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>-->\\n    <div class=\\\"col-md-2\\\"></div>\\n    <div class=\\\"col-md-4\\\">\\n      <!-- <div class=\\\"box box-default\\\">\\n        <div class=\\\"box-body\\\"> -->\\n      <div class=\\\"btn-group-vertical\\\">\\n        <button class=\\\"btn btn-success\\\" type=\\\"button\\\">\\n          <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\n          New Session\\n        </button>\\n        <button class=\\\"btn btn-lg btn-info\\\" type=\\\"button\\\">Treatment Data</button>\\n        <button class=\\\"btn btn-lg btn-warning\\\" type=\\\"button\\\">Edit MSE</button>\\n      </div>\\n      <!-- </div>\\n      </div> -->\\n    </div>\\n  </div>\\n</section>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { Client } from './../../model/client';\nimport { ClientsService } from '../../clients.service';\n\n@Component({\n  selector: 'app-client-detail',\n  templateUrl: './client-detail.component.html',\n  styleUrls: ['./client-detail.component.css']\n})\nexport class ClientDetailComponent implements OnInit, OnDestroy{\n  \n  paramSubscription : Subscription;\n  clientId : number;\n  searchedClient : Client;\n\n  constructor(private route: ActivatedRoute, private clientsService : ClientsService) { }\n\n  ngOnDestroy() {\n    this.paramSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.clientId = +this.route.snapshot.params['id'];\n    this.paramSubscription = this.route.params.subscribe(\n      (params : Params) => {\n        this.clientId = +params['id'];\n      }\n    )\n\n      this.clientsService.findClientById(this.clientId).subscribe(\n        (client) => this.searchedClient = client\n      );\n\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css']\n})\nexport class ClientComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  mse works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mse',\n  templateUrl: './mse.component.html',\n  styleUrls: ['./mse.component.css']\n})\nexport class MseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"content-header\\\">\\n    <h5 class=\\\"left-half\\\">Search Client</h5>\\n</div>\\n<section class=\\\"content\\\">\\n    <div class=\\\"container-fluid\\\">\\n    \\n        <div class=\\\"card\\\"> \\n                <div class=\\\"card-body\\\">\\n                <form [formGroup]=\\\"searchClientForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                 <div class=\\\"col-md-8\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"firstName\\\">First Name</label>\\n                                <input type=\\\"text\\\" \\n                                        id=\\\"firstName\\\" \\n                                        formControlName=\\\"firstName\\\" \\n                                        class=\\\"form-control\\\">\\n\\n                                <span *ngIf=\\\"searchClientForm.get('firstName').touched && \\n                                        !searchClientForm.get('firstName').valid\\\" class=\\\"help-block\\\">\\n                                    <span *ngIf=\\\"searchClientForm.get('firstName').errors['required']\\\">\\n                                        First name is required in search!\\n                                    </span>\\n                                </span>\\n                            </div>\\n                        </div>\\n                        <span class=\\\"left-onehalf\\\"></span>\\n                        <div class=\\\"col-md-4\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"lastName\\\">Last Name</label>\\n                                <input type=\\\"text\\\" \\n                                        id=\\\"lastName\\\" \\n                                        formControlName=\\\"lastName\\\" \\n                                        class=\\\"form-control\\\">\\n\\n                                <span *ngIf=\\\"searchClientForm.get('lastName').touched &&\\n                                        !searchClientForm.get('lastName').valid\\\" class=\\\"help-block\\\">\\n                                    <span *ngIf=\\\"searchClientForm.get('lastName').errors['required']\\\">\\n                                        Last name is required in search!\\n                                    </span>\\n                                </span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <br><br>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-4\\\">\\n                            <div class=\\\"row\\\"></div>\\n                            <div class=\\\"form-group\\\">\\n                                <button class=\\\"btn btn-block btn-primary\\\" \\n                                type=\\\"submit\\\" \\n                                [disabled]=\\\"!searchClientForm.valid\\\">Search</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-4\\\">\\n                            <div class=\\\"row\\\"></div>\\n                            <div class=\\\"form-group\\\">\\n                                <button type= \\\"button\\\"\\n                                class=\\\"btn btn-block btn-secondary\\\" \\n                                (click)=\\\"onResetSearchForm()\\\">Clear</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                </form>\\n                <!-- <div class=\\\"row\\\"> -->\\n                    <div class=\\\"col-md-4 top10\\\">\\n                        <div class=\\\"row\\\"></div>\\n                        <div class=\\\"row\\\"></div>\\n                        <div class=\\\"form-group\\\">\\n                            <button \\n                            type=\\\"button\\\"\\n                            class=\\\"btn btn-block btn-danger float-right\\\" \\n                            (click)=\\\"onUpcomingSessions()\\\">Upcoming Sessions</button>\\n                        </div>\\n                    </div>\\n                <!-- </div> -->\\n                </div> <!-- card body -->\\n        </div> <!-- card --> \\n    \\n    <!-- Search Result below -->\\n    <!-- <div class=\\\"col-xs-12\\\"> -->\\n    <div class=\\\"box\\\">\\n        <div class=\\\"box-header\\\">\\n            Search Result\\n        </div>\\n        <div class=\\\"box-body table-responsive no-padding\\\" *ngIf = \\\"clientSearchComplete\\\">\\n                <table class=\\\"table table-hover\\\">\\n                        <tr>\\n                          <th>Name</th>                          \\n                          <th>Follow Up Date</th>                          \\n                          <th>Status</th>\\n                        </tr>\\n                        <tr>\\n                          <td>\\n                            <a [routerLink] = \\\"['../', searchedClient.clientId]\\\">{{ searchedClient.clientName }}</a>\\n                          </td>                          \\n                          <td>{{ searchedClient.followupdate }}</td>\\n                          <td>\\n                            <span \\n                            [ngClass]=\\\"searchedClient.status === 'Y' ? 'label label-success' : \\n                                            (searchedClient.status === 'C' ? 'label label-primary' : \\n                                            'label label-warning' )\\\">\\n                            {{ searchedClient.status }}\\n                            </span></td>\\n                        </tr>                        \\n                      </table>\\n            \\n        </div>\\n        <!-- Upcoming Sessions -->\\n        <div class=\\\"box-body table-responsive no-padding\\\" *ngIf = \\\"sessionSearchComplete\\\">\\n            <table class=\\\"table table-hover\\\">\\n                <tr>\\n                    <th>Name</th>                          \\n                    <th>Follow Up Date</th>                          \\n                    <th>Status</th>\\n                </tr>\\n                <tr *ngFor='let psySession of searchedUpcomingSessions'>\\n                    <td>\\n                        <a [routerLink] = \\\"['../', psySession.client.clientId]\\\">{{ psySession.client.clientName }}</a>\\n                    </td>                          \\n                    <td>{{  psySession.followupDate }}</td>\\n                    <td>\\n                    <span \\n                    [ngClass]=\\\"psySession.client.status === 'Y' ? 'label label-success' : \\n                                (psySession.client.status === 'C' ? 'label label-primary' : \\n                                'label label-warning' )\\\">\\n                    {{ psySession.client.status }}\\n                    </span></td>\\n                </tr>                        \\n            </table>\\n        </div>\\n\\n        <div class=\\\"box-body table-responsive\\\" *ngIf = \\\"errorMessage\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <p class=\\\"text-red\\\">{{errorMessage}}</p>\\n              </div>\\n          </div>\\n        </div>\\n    </div>\\n    <!-- </div> -->\\n    </div>\\n</section>\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport { ClientsService } from './../../clients.service';\nimport { Client } from './../../model/client';\nimport { PsySession } from '../../model/psy-session';\n\n\n@Component({\n  selector: 'app-search-client',\n  templateUrl: './search-client.component.html',\n  styleUrls: ['./search-client.component.css']\n})\nexport class SearchClientComponent implements OnInit, OnDestroy{\n\n  searchClientForm : FormGroup;\n  searchSubscription : Subscription;\n  sessionSubscription : Subscription;\n  searchedClient : Client;\n  searchedUpcomingSessions = new Array<PsySession>();\n  clientSearchComplete = false;\n  sessionSearchComplete = false;\n  sessionServiceSubscription : Subscription;\n  errorMessage : string;\n  \n  constructor(private clientsService : ClientsService) { }\n\n  ngOnInit() : void {\n    this.createSearchForm();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe();\n  }\n\n  unsubscribe() {\n    if(this.searchSubscription)\n      this.searchSubscription.unsubscribe();\n    if(this.sessionSubscription)  \n      this.sessionSubscription.unsubscribe();\n  }\n\n  onresetSearch () {\n    this.unsubscribe();\n    this.clientSearchComplete = false;\n    this.sessionSearchComplete = false;\n  }\n\n  createSearchForm () {\n    this.searchClientForm = new FormGroup({ \n      'firstName' : new FormControl(null, [Validators.required, Validators.pattern(\"[a-zA-Z ]+\")]),\n      'lastName' : new FormControl(null, [Validators.required, Validators.pattern(\"[a-zA-Z ]+\")])\n      });  \n  }\n\n  onSubmit() {\n    this.onresetSearch();\n    this.searchSubscription = this.clientsService.searchClient(\n      this.searchClientForm.value['firstName'],\n      this.searchClientForm.value['lastName']).subscribe(\n        (client) => {this.searchedClient = client; this.clientSearchComplete = true;},\n        (error) => this.errorMessage = error\n        \n      );\n  }\n\n  onUpcomingSessions(){\n    this.onresetSearch();\n    this.searchedUpcomingSessions.splice(0,this.searchedUpcomingSessions.length);\n    this.sessionSubscription = this.clientsService.findUpcomingSessions()\n    .flatMap( psyArr => psyArr)\n    .flatMap(session => {\n      this.searchedUpcomingSessions.push(session);\n      return this.clientsService.findClientById(session.clientId);\n    }).subscribe(\n      client => {\n        this.searchedUpcomingSessions\n          .filter(s => s.clientId === client.clientId)\n          .map( s => s.client = client);\n          this.sessionSearchComplete = true;\n      },\n      (error) => this.errorMessage = error\n    );\n  }\n\n  onResetSearchForm() {\n    this.unsubscribe();\n    this.createSearchForm();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"sessionForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n<div class=\\\"content-header\\\">\\n  <h3>{{updateMode ? 'Update' : 'Create' }} Session for {{clientName}}</h3>\\n</div>\\n<section class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    \\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">              \\n                <div class=\\\"col-md-4\\\">\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"sessionDate\\\">Session Date</label>\\n                            <div class=\\\"input-group\\\">\\n                              <div class=\\\"input-group-prepend\\\">\\n                                <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\n                              </div>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\"                              \\n                              formControlName=\\\"sessionDate\\\"\\n                              placeholder=\\\"dd/mm/yyyy\\\">                             \\n                            </div>\\n                            <span \\n                                *ngIf=\\\"!sessionForm.get('sessionDate').valid && \\n                                sessionForm.get('sessionDate').touched\\\"\\n                                class=\\\"help-block\\\">\\n                                <span class=\\\"help-block text-danger\\\"\\n                                    *ngIf=\\\"sessionForm.get('sessionDate').errors['required']\\\">\\n                                  Session date is required!\\n                                </span>\\n                                <span class=\\\"help-block text-danger\\\"\\n                                    *ngIf=\\\"sessionForm.get('sessionDate').errors['incorrectDate']\\\">\\n                                  Invalid date!\\n                                </span>\\n                              </span>\\n                      </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"impression\\\">Impression</label>\\n                          <textarea id=\\\"impression\\\" \\n                          formControlName=\\\"impression\\\" class=\\\"form-control\\\" rows=\\\"12\\\">\\n                          </textarea>                          \\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"feedback\\\">Feedback</label>\\n                            <textarea id=\\\"feedback\\\" \\n                              formControlName=\\\"feedback\\\" \\n                              class=\\\"form-control\\\" rows=\\\"12\\\">\\n                            </textarea>\\n                          </div>\\n\\n                      <div class=\\\"form-group\\\">\\n                          <label for=\\\"followupDate\\\">Follow Up Date</label>\\n                              <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                  <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></span>\\n                                </div>\\n                                <input type=\\\"text\\\" id = \\\"datemask\\\" class=\\\"form-control\\\" \\n                                formControlName=\\\"followupDate\\\"                            \\n                                placeholder=\\\"dd/mm/yyyy\\\">\\n                                <span \\n                                *ngIf=\\\"!sessionForm.get('followupDate').valid && \\n                                sessionForm.get('followupDate').touched\\\"\\n                                class=\\\"help-block\\\">\\n                                <span class=\\\"help-block text-danger\\\"\\n                                    *ngIf=\\\"sessionForm.get('followupDate').errors['incorrectDate']\\\">\\n                                  Invalid date!\\n                                </span>\\n                              </span>\\n                              </div>\\n                        </div>\\n\\n                 </div>\\n            </div> \\n             <!-- row -->\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <button class=\\\"btn btn-block btn-primary\\\" \\n                     type=\\\"submit\\\" [disabled]=\\\"!sessionForm.valid\\\">Submit</button>\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"form-group\\\">\\n                      <button class=\\\"btn btn-block btn-warning\\\" \\n                      (click)=\\\"onResetCreateSessionForm()\\\">Clear</button>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <a routerLink = \\\"/dashboard\\\" class=\\\"btn btn-block btn-danger\\\">Cancel</a>\\n                    </div>\\n                    <!-- //TODO This should go back to client/:id -->\\n                  </div>\\n          </div>     \\n        </div>\\n    </div>\\n  </div>\\n</section>\\n</form>   \\n\\n \"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Utility } from '../../utility/utility';\n\n@Component({\n  selector: 'app-session',\n  templateUrl: './session.component.html',\n  styleUrls: ['./session.component.css']\n})\nexport class SessionComponent implements OnInit {\n  clientName = \"Namaruk Pinlimas\";\n  updateMode = false;\n\n  sessionForm : FormGroup;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.createSessionForm();\n\n  }\n\n  createSessionForm() {\n\n    this.sessionForm = new FormGroup ({\n      'sessionDate' : new FormControl(null,  [Validators.required, Utility.validDate.bind(this)]),\n      'followupDate' : new FormControl(null, Utility.validDate.bind(this)),\n      'impression' : new FormControl(null),\n      'feedback' : new FormControl(null)\n    })\n  }\n\n  onSubmit() {\n    console.log(this.sessionForm.value);\n  }\n\n  onResetCreateSessionForm() {\n    this.createSessionForm();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  treatment-data works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-treatment-data',\n  templateUrl: './treatment-data.component.html',\n  styleUrls: ['./treatment-data.component.css']\n})\nexport class TreatmentDataComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { PsySession } from './model/psy-session';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport 'rxjs/Rx';\nimport { Observable } from 'rxjs/Observable';\n\nimport { environment } from '../environments/environment';\nimport { Client } from './model/client';\n\n@Injectable()\nexport class ClientsService {\n\n    constructor(private httpClient: HttpClient) {}\n\n    searchClient(f : string, l : string) {\n        let params = new HttpParams().set('fname', f).set('lname', l).set('search-by', 'name');\n        return this.httpClient.get<Client>(`${environment.apiUrl}${'/clients/search/'}`, {params})\n    }\n\n    findUpcomingSessions() {\n        return this.httpClient.get<PsySession[]>(`${environment.apiUrl}${'/psy-session/upcoming/'}`);\n    }\n\n    findClientById(clientId : number) {\n        let params = new HttpParams().set('id', ''+clientId).set('search-by', 'id');\n        return this.httpClient.get<Client>(`${environment.apiUrl}${'/clients/search/'}`, {params})\n    }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"content-header\\\">\\n  <h5 class=\\\"left-half\\\">Dashboard</h5>\\n</div>\\n<section class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- <div class=\\\"card card-default\\\"> -->\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-4 col-md-2\\\">\\n          <a routerLink = \\\"/client/search\\\" class=\\\"btn btn-primary\\\">\\n            Search Client\\n          </a>\\n        </div>\\n        <div class=\\\"col-sm-4 col-md-2\\\">\\n          <a routerLink = \\\"/client/add\\\" class=\\\"btn btn-success\\\">\\n            Add New Client\\n          </a>\\n        </div>\\n      </div>\\n      <div style=\\\"padding-top: 36px;\\\"></div>\\n    <!-- </div> -->\\n    <div class=\\\"card card-default\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"card card-default\\\">\\n            <div class=\\\"card-header\\\">\\n              <h3 class=\\\"card-title\\\">\\n                <i class=\\\"fa fa-warning\\\"></i>\\n                Ongoing Sessions\\n              </h3>\\n            </div>\\n            <!-- /.card-header -->\\n            <div class=\\\"card-body\\\">\\n              blah blah blah\\n            </div>\\n            <!-- /.card-body -->\\n          </div>\\n          <!-- /.card -->\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"card card-default\\\">\\n            <div class=\\\"card-header\\\">\\n              <h3 class=\\\"card-title\\\">\\n                <i class=\\\"fa fa-warning\\\"></i>\\n                Notifications\\n              </h3>\\n            </div>\\n            <!-- /.card-header -->\\n            <div class=\\\"card-body\\\">\\n              <!-- Info Boxes Style 2 -->\\n              <div class=\\\"info-box mb-3 bg-warning\\\">\\n                <span class=\\\"info-box-icon\\\">\\n                  <i class=\\\"fa fa-tag\\\"></i>\\n                </span>\\n\\n                <div class=\\\"info-box-content\\\">\\n                  <span class=\\\"info-box-text\\\">Yet to Start Sessions</span>\\n                </div>\\n                <!-- /.info-box-content -->\\n              </div>\\n              <div class=\\\"info-box mb-3 bg-danger\\\">\\n                <span class=\\\"info-box-icon\\\">\\n                  <i class=\\\"fa fa-cloud-download\\\"></i>\\n                </span>\\n\\n                <div class=\\\"info-box-content\\\">\\n                  <span class=\\\"info-box-text\\\">Crossed Follow Up Date</span>\\n                </div>\\n                <!-- /.info-box-content -->\\n              </div>\\n              <!-- /.info-box -->\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n  @HostBinding('class.open') isOpen = false;\n\n  @HostListener('click') toggleOpen() {\n    this.isOpen = !this.isOpen;\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  error-page works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<footer class=\\\"main-footer\\\">\\n  <p>\\n    footer works!\\n  </p>  \\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<header class=\\\"main-header\\\">\\n  <nav class=\\\"navbar navbar-static-top\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <!-- <li class=\\\"nav-item\\\">\\n        <a href=\\\"#\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"push-menu\\\" role=\\\"button\\\"></a>\\n      </li> -->\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" data-widget=\\\"pushmenu\\\" href=\\\"#\\\"><i class=\\\"fa fa-bars\\\"></i></a>\\n      </li>\\n    </ul>\\n\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li>\\n        Welcome, Sahana Ray\\n      </li>\\n    </ul>\\n\\n  </nav>\\n</header>\\n\\n\\n<!-- Navbar \\n <nav class=\\\"main-header-no-sidebar navbar navbar-expand bg-white navbar-light border-bottom\\\">\\n   Left navbar links\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" data-widget=\\\"pushmenu\\\" href=\\\"#\\\"><i class=\\\"fa fa-bars\\\"></i></a>\\n      </li>\\n      <li class=\\\"nav-item d-none d-sm-inline-block\\\">\\n        <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">Touching Hand</a>\\n      </li>\\n    </ul> -->\\n\\n<!-- Right navbar links \\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      Welcome, Sahana Ray\\n    </ul>\\n  </nav>\\n  navbar -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fuppercase'\n})\nexport class FuppercasePipe implements PipeTransform {\n\n  transform(value: string, howmany: number): any {\n    if(value.length === 0 || howmany === 0) return value;\n    return value.substr(0,howmany).toUpperCase() + value.slice(howmany, value.length);    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  sessions works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sessions',\n  templateUrl: './sessions.component.html',\n  styleUrls: ['./sessions.component.css']\n})\nexport class SessionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  upcoming-sessions works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upcoming-sessions',\n  templateUrl: './upcoming-sessions.component.html',\n  styleUrls: ['./upcoming-sessions.component.css']\n})\nexport class UpcomingSessionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  side notification works!\\n</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-notifications',\n  templateUrl: './side-notifications.component.html',\n  styleUrls: ['./side-notifications.component.css']\n})\nexport class SideNotificationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- Main Sidebar Container -->\\n<aside class=\\\"main-sidebar sidebar-dark-primary\\\">\\n  <div class=\\\"sidebar\\\">\\n    <nav class=\\\"mt-2\\\">\\n      <ul class=\\\"nav nav-pills nav-sidebar flex-column\\\" data-widget=\\\"tree\\\">\\n        <li class=\\\"nav-item\\\">\\n          <!-- Brand Logo -->\\n          <a routerLink=\\\"dashboard\\\" class=\\\"brand-link\\\">\\n            <span class=\\\"brand-text font-weight-light\\\">Touching Hands</span>\\n          </a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"dashboard\\\" [routerLinkActive]=\\\"['router-link-active']\\\" class=\\\"nav-link\\\">\\n              Dashboard\\n            </a>\\n      </li>\\n        <li class=\\\"nav-item\\\">\\n            <a routerLink=\\\"client/search\\\" [routerLinkActive]=\\\"['router-link-active']\\\" class=\\\"nav-link\\\">\\n                Search Clients\\n              </a>\\n        </li>\\n      </ul>\\n    </nav>\\n  </div>\\n</aside>\\n<!-- Sidebar \\n  <div class=\\\"sidebar\\\">\\n     Sidebar user panel (optional) \\n    <div class=\\\"user-panel mt-3 pb-3 mb-3 d-flex\\\">\\n      <div class=\\\"image\\\">\\n        <img src=\\\"../../assets/image/user2-160x160.jpg\\\" class=\\\"img-circle elevation-2\\\" alt=\\\"User Image\\\">\\n      </div>\\n      <div class=\\\"info\\\">\\n        <a href=\\\"#\\\" class=\\\"d-block\\\">Alexander Pierce</a>\\n      </div>\\n    </div>\\n\\n     Sidebar Menu \\n    <nav class=\\\"mt-2\\\">\\n      <ul class=\\\"nav nav-pills nav-sidebar flex-column\\\" data-widget=\\\"treeview\\\" role=\\\"menu\\\" data-accordion=\\\"false\\\">\\n         Add icons to the links using the .nav-icon class\\n             with font-awesome or any other icon font library \\n        <li class=\\\"nav-item has-treeview menu-open\\\">\\n          <a href=\\\"#\\\" class=\\\"nav-link active\\\">\\n            <i class=\\\"nav-icon fa fa-dashboard\\\"></i>\\n            <p>\\n              Dashboard\\n              <i class=\\\"right fa fa-angle-left\\\"></i>\\n            </p>\\n          </a>\\n          <ul class=\\\"nav nav-treeview\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a href=\\\"../../index.html\\\" class=\\\"nav-link active\\\">\\n                <i class=\\\"fa fa-circle-o nav-icon\\\"></i>\\n                <p>Dashboard v1</p>\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a href=\\\"../../index2.html\\\" class=\\\"nav-link\\\">\\n                <i class=\\\"fa fa-circle-o nav-icon\\\"></i>\\n                <p>Dashboard v2</p>\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a href=\\\"../../index3.html\\\" class=\\\"nav-link\\\">\\n                <i class=\\\"fa fa-circle-o nav-icon\\\"></i>\\n                <p>Dashboard v3</p>\\n              </a>\\n            </li>\\n          </ul>\\n        </li>        \\n      </ul>\\n    </nav>\\n    /.sidebar-menu \\n  </div>\\n  sidebar \\n</aside>-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, \n    HttpInterceptor, \n    HttpHandler, \n    HttpRequest, \n    HttpErrorResponse, \n    HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { _throw } from 'rxjs/observable/throw';\nimport 'rxjs/add/operator/catch';\n\n/**\n * Intercepts the HTTP responses, and in case that an error/exception is thrown, handles it\n * and extract the relevant information of it.\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    /**\n     * Intercepts an outgoing HTTP request, executes it and handles any error that could be triggered in execution.\n     * @see HttpInterceptor\n     * @param req the outgoing HTTP request\n     * @param next a HTTP request handler\n     */\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req)\n            .catch(errorResponse  => {\n                let errMsg: string;\n                if (errorResponse.error instanceof Error) {\n                    errMsg = errorResponse.error.message;\n                 } else {\n                    if (errorResponse.error != null) {\n                        errMsg = errorResponse.error.responseMessage;                        \n                    } else {\n                        errMsg = 'Error Message: Internal Technical Error occured' ;\n                    }\n                }                \n                return _throw(errMsg);\n            });\n    }\n}\n\n/**\n * Provider POJO for the interceptor\n */\nexport const ErrorInterceptorProvider = {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true,\n};","import { FormControl } from \"@angular/forms\";\n\nexport class Utility {\n\n\n    static validDate(control : FormControl) : {[s : string]: boolean} {\n        let datePattern = /^(0[1-9]|[12][0-9]|3[01])[\\/](0[1-9]|1[012])[\\/](19|20)\\d\\d$/;\n\n        if(control.value !== null && !control.value.match(datePattern)) {\n          return {'incorrectDate' : true};\n        }\n        return null; //in case of valid value send null, not false!\n      }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl : \"http://localhost:8090/onlinecounselling/service\"\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}